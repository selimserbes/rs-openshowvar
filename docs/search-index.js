var searchIndex = new Map(JSON.parse('[\
["rs_openshowvar",{"doc":"","t":"FNNONNNNNNNNNNN","n":["OpenShowVar","borrow","borrow_mut","conn","connect","disconnect","from","into","new","read","send","try_from","try_into","type_id","write"],"q":[[0,"rs_openshowvar"],[15,"std::io::error"],[16,"alloc::string"],[17,"alloc::vec"],[18,"core::result"],[19,"core::any"]],"d":["The <code>OpenShowVar</code> structure is used to connect to a robot â€¦","","","TCP connection.","Connects to the TCP server.","Terminates the TCP connection.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new instance of <code>OpenShowVar</code>.","Reads the specified variable.","Sends a variable value.","","","","Writes a value to the specified variable."],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{ce{}{}}0`{b{{f{d}}}}{bd}{cc{}}3{{hj}b}{{bl}{{f{h}}}}{{bll}{{f{{A`{n}}}}}}{c{{Ab{e}}}{}{}}0{cAd{}}{{bll}{{f{h}}}}","c":[],"p":[[5,"OpenShowVar",0],[1,"unit"],[8,"Result",15],[5,"String",16],[1,"u16"],[1,"str"],[1,"u8"],[5,"Vec",17],[6,"Result",18],[5,"TypeId",19]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
